import React, { Component } from 'react';
import Follower from './p5/Follower.jsx';
import Forces from './p5/Forces.jsx';
import ProjectItem from './ProjectItem.jsx';

export default class ProjectList extends Component {
  constructor(props){
    super(props);

    this.state = {
      selectedProject: '',
      bodyColor: 'near-black',
      bodyBG: 'bg-washed-blue'
    };

    this.projectSelected = this.projectSelected.bind(this);
    this.goBack = this.goBack.bind(this);
  }

  projectSelected(name, color, bg) {
    document.body.classList.remove(this.state.bodyColor);
    document.body.classList.remove(this.state.bodyBG);
    void document.body.offsetWidth; // recalculate to trigger animation
    document.body.classList.add(color);
    document.body.classList.add(bg);
    this.setState({selectedProject: name, bodyColor: color, bodyBG: bg});
  }

  goBack(){
    const defaultState = {
      bodyColor: 'near-black',
      bodyBG: 'bg-washed-blue',
      selectedProject: ''
    };
    document.body.classList.remove(this.state.bodyColor);
    document.body.classList.remove(this.state.bodyBG);
    void document.body.offsetWidth; // recalculate to trigger animation
    document.body.classList.add(defaultState.bodyColor);
    document.body.classList.add(defaultState.bodyBG);
    this.setState(defaultState);

    // hacky, but need to destroy the leftover canvas generated by the project
    let canvasContainer = document.getElementById('canvas-container');
    while(canvasContainer.firstChild){
      canvasContainer.removeChild(canvasContainer.firstChild);
    }
  }

  render() {
    const currentProj = ()=>{
      switch (this.state.selectedProject){
        case 'Follower':
          return (<Follower/>);
        case 'Forces':
          return (<Forces/>);
        default:
          return (<div></div>);
      }
    };

    const projectList = ()=>{
      if(!this.state.selectedProject.length){
        return (
          <div>
            <ProjectItem name="Follower" date="Mar2017" currentColor={this.state.bodyColor} color="purple" bg="bg-light-green" onSelected={this.projectSelected} description=" It's a ball that follows your mouse ¯\\_(ツ)_/¯"/>
            <ProjectItem name="Forces" date="Mar2017" currentColor={this.state.bodyColor} color="light-yellow" bg="bg-purple" onSelected={this.projectSelected} description=" idk"/>
          </div>
        )
      } else {
        return (<div>
          <a href="#" onClick={this.goBack}>Go Back</a>
        </div>);
      }
    };

    return (
      <div>
        {currentProj()}
        {projectList()}
      </div>
    );
  }
};
